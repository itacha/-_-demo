<template>
  <view>
    <van-search
      value="{{ value }}"
      placeholder="请输入搜索关键词"
      show-action
      bind:search="onSearch"
      bind:cancel="onCancel"
      bind:change="onChange"
    />
    <!-- 搜索的建议列表 -->
    <van-cell-group wx:if="{{isShowHistory === false}}">
        <block wx:for="{{suggestList}}" wx:key="index">
            <van-cell title="{{item.goods_name}}" @tap="goGoodsList({{item.goods_id}})"/>
        </block>
    </van-cell-group>
    <!-- 历史搜索区域 -->
    <view wx:else>
        <view class="history_title">
            <text>历史搜索</text>
            <van-icon name="delete" info="{{kwList.length}}" @tap="clearHistory"/>
        </view>
        <view class="history_body">
            <van-tag type="success" wx:for="{{kwList}}" wx:key="index" class="tag"
            @tap="goGoodsList({{item}})">{{item}}</van-tag>
        </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'

export default class extends wepy.page {
    data = {
        value: '',
        suggestList:[],
        kwList:[]
    }
    onLoad() {
       const kwList = wepy.getStorageSync('kw') || []
    }
    methods = {
        // 触发了搜索
        onSearch(e) {
            const kw = e.detail.trim()
             if (kw.length<=0) {
                return 
            }
            // 将用户填写的搜索关键词，保存到storage中
            // 防止关键词重复保存
            if (this.kwList.indexOf(kw)===-1) {
                this.kwList.unshift(kw)
            }
            // kwList只存10个，在每次保存前先截取数组，slice取不到最后，不会修改原数组，而是返回新数组
            this.kwList = this.kwList.slice(0,10)
            wepy.setStorageSync('kw',this.kwList)
             wepy.navigateTo({
                url:'/pages/goods_list?query='+kw
            })
        },
        // 输入内容发生变化时触发
        onChange(e){
            this.value=e.detail.trim()
            if (e.detail.trim().length<=0) {
                this.suggestList=[]
                return 
            }
           this.getSuggestList(e.detail)
        },
        // 触发了取消
        onCancel() {
            this.suggestList=[]
        },
        // 点击搜索建议项导航到商品详情页面
        goGoodsList(goods_id) {
            wepy.navigateTo({
                url:'/pages/goods_list?goods_id='+goods_id
            })
        },
        // 清除搜索历史记录
        clearHistory(){
            this.kwList=[]
            wepy.setStorageSync('kw',[])
        }
    }
    computed = {
        // true 展示搜索历史区域，false 展示搜索建议区域
        isShowHistory() {
            if (this.value.length<=0) {
                return true
            }
            return false
        }
    }
    async getSuggestList(searchStr) {
            const { data : res } = await wepy.get('/goods/qsearch',{
                query:searchStr
            })
            if (res.meta.status!==200) {
                return wepy.baseToast()
            }
            this.suggestList=res.message
    }
}
</script>

<style lang="less">
.history_title{
    display: flex;
    justify-content: space-between;
    padding:0 20rpx;
    text:nth-child(1){
        font-size: 26rpx;
        font-weight: bold;
    }
}

.tag{
    margin:15rpx;
}
</style>
